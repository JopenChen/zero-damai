// Code generated by goctl. DO NOT EDIT.
// Source: service.proto

package server

import (
	"context"

	"service/internal/logic/orderservice"
	"service/internal/svc"
	"service/service_pb"
)

type OrderServiceServer struct {
	svcCtx *svc.ServiceContext
	service_pb.UnimplementedOrderServiceServer
}

func NewOrderServiceServer(svcCtx *svc.ServiceContext) *OrderServiceServer {
	return &OrderServiceServer{
		svcCtx: svcCtx,
	}
}

// OrderAdd 订单表 创建
func (s *OrderServiceServer) OrderAdd(ctx context.Context, in *service_pb.OrderAddReq) (*service_pb.OrderAddResp, error) {
	l := orderservicelogic.NewOrderAddLogic(ctx, s.svcCtx)
	return l.OrderAdd(in)
}

// OrderUpdate 订单表 更新
func (s *OrderServiceServer) OrderUpdate(ctx context.Context, in *service_pb.OrderUpdateReq) (*service_pb.EmptyResp, error) {
	l := orderservicelogic.NewOrderUpdateLogic(ctx, s.svcCtx)
	return l.OrderUpdate(in)
}

// OrderRetrieve 订单表 获取
func (s *OrderServiceServer) OrderRetrieve(ctx context.Context, in *service_pb.OrderRetrieveReq) (*service_pb.OrderRetrieveResp, error) {
	l := orderservicelogic.NewOrderRetrieveLogic(ctx, s.svcCtx)
	return l.OrderRetrieve(in)
}

// OrderRemove 订单表 删除
func (s *OrderServiceServer) OrderRemove(ctx context.Context, in *service_pb.OrderRemoveReq) (*service_pb.EmptyResp, error) {
	l := orderservicelogic.NewOrderRemoveLogic(ctx, s.svcCtx)
	return l.OrderRemove(in)
}
