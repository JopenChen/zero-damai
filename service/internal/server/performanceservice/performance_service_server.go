// Code generated by goctl. DO NOT EDIT.
// Source: service.proto

package server

import (
	"context"

	"service/internal/logic/performanceservice"
	"service/internal/svc"
	"service/service_pb"
)

type PerformanceServiceServer struct {
	svcCtx *svc.ServiceContext
	service_pb.UnimplementedPerformanceServiceServer
}

func NewPerformanceServiceServer(svcCtx *svc.ServiceContext) *PerformanceServiceServer {
	return &PerformanceServiceServer{
		svcCtx: svcCtx,
	}
}

// PerformanceAdd 演出活动表 创建
func (s *PerformanceServiceServer) PerformanceAdd(ctx context.Context, in *service_pb.PerformanceAddReq) (*service_pb.PerformanceAddResp, error) {
	l := performanceservicelogic.NewPerformanceAddLogic(ctx, s.svcCtx)
	return l.PerformanceAdd(in)
}

// PerformanceUpdate 演出活动表 更新
func (s *PerformanceServiceServer) PerformanceUpdate(ctx context.Context, in *service_pb.PerformanceUpdateReq) (*service_pb.EmptyResp, error) {
	l := performanceservicelogic.NewPerformanceUpdateLogic(ctx, s.svcCtx)
	return l.PerformanceUpdate(in)
}

// PerformanceRetrieve 演出活动表 获取
func (s *PerformanceServiceServer) PerformanceRetrieve(ctx context.Context, in *service_pb.PerformanceRetrieveReq) (*service_pb.PerformanceRetrieveResp, error) {
	l := performanceservicelogic.NewPerformanceRetrieveLogic(ctx, s.svcCtx)
	return l.PerformanceRetrieve(in)
}

// PerformanceRemove 演出活动表 删除
func (s *PerformanceServiceServer) PerformanceRemove(ctx context.Context, in *service_pb.PerformanceRemoveReq) (*service_pb.EmptyResp, error) {
	l := performanceservicelogic.NewPerformanceRemoveLogic(ctx, s.svcCtx)
	return l.PerformanceRemove(in)
}
