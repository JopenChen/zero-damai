// Code generated by goctl. DO NOT EDIT.
// Source: service.proto

package server

import (
	"context"

	"service/internal/logic/userservice"
	"service/internal/svc"
	"service/service_pb"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	service_pb.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// UserAdd 用户表 创建
func (s *UserServiceServer) UserAdd(ctx context.Context, in *service_pb.UserAddReq) (*service_pb.UserAddResp, error) {
	l := userservicelogic.NewUserAddLogic(ctx, s.svcCtx)
	return l.UserAdd(in)
}

// UserUpdate 用户表 更新
func (s *UserServiceServer) UserUpdate(ctx context.Context, in *service_pb.UserUpdateReq) (*service_pb.EmptyResp, error) {
	l := userservicelogic.NewUserUpdateLogic(ctx, s.svcCtx)
	return l.UserUpdate(in)
}

// UserRetrieve 用户表 获取
func (s *UserServiceServer) UserRetrieve(ctx context.Context, in *service_pb.UserRetrieveReq) (*service_pb.UserRetrieveResp, error) {
	l := userservicelogic.NewUserRetrieveLogic(ctx, s.svcCtx)
	return l.UserRetrieve(in)
}

// UserRemove 用户表 删除
func (s *UserServiceServer) UserRemove(ctx context.Context, in *service_pb.UserRemoveReq) (*service_pb.EmptyResp, error) {
	l := userservicelogic.NewUserRemoveLogic(ctx, s.svcCtx)
	return l.UserRemove(in)
}
