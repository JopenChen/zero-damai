// Code generated by goctl. DO NOT EDIT.
// Source: service.proto

package server

import (
	"context"

	"service/internal/logic/performancesessionservice"
	"service/internal/svc"
	"service/service_pb"
)

type PerformanceSessionServiceServer struct {
	svcCtx *svc.ServiceContext
	service_pb.UnimplementedPerformanceSessionServiceServer
}

func NewPerformanceSessionServiceServer(svcCtx *svc.ServiceContext) *PerformanceSessionServiceServer {
	return &PerformanceSessionServiceServer{
		svcCtx: svcCtx,
	}
}

// PerformanceSessionAdd 演出活动场次表 创建
func (s *PerformanceSessionServiceServer) PerformanceSessionAdd(ctx context.Context, in *service_pb.PerformanceSessionAddReq) (*service_pb.PerformanceSessionAddResp, error) {
	l := performancesessionservicelogic.NewPerformanceSessionAddLogic(ctx, s.svcCtx)
	return l.PerformanceSessionAdd(in)
}

// PerformanceSessionUpdate 演出活动场次表 更新
func (s *PerformanceSessionServiceServer) PerformanceSessionUpdate(ctx context.Context, in *service_pb.PerformanceSessionUpdateReq) (*service_pb.EmptyResp, error) {
	l := performancesessionservicelogic.NewPerformanceSessionUpdateLogic(ctx, s.svcCtx)
	return l.PerformanceSessionUpdate(in)
}

// PerformanceSessionRetrieve 演出活动场次表 获取
func (s *PerformanceSessionServiceServer) PerformanceSessionRetrieve(ctx context.Context, in *service_pb.PerformanceSessionRetrieveReq) (*service_pb.PerformanceSessionRetrieveResp, error) {
	l := performancesessionservicelogic.NewPerformanceSessionRetrieveLogic(ctx, s.svcCtx)
	return l.PerformanceSessionRetrieve(in)
}

// PerformanceSessionRemove 演出活动场次表 删除
func (s *PerformanceSessionServiceServer) PerformanceSessionRemove(ctx context.Context, in *service_pb.PerformanceSessionRemoveReq) (*service_pb.EmptyResp, error) {
	l := performancesessionservicelogic.NewPerformanceSessionRemoveLogic(ctx, s.svcCtx)
	return l.PerformanceSessionRemove(in)
}
