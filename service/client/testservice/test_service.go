// Code generated by goctl. DO NOT EDIT.
// Source: service.proto

package testservice

import (
	"context"

	"github.com/JopenChen/zero-damai/service/service_pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReq  = service_pb.LoginReq
	LoginResp = service_pb.LoginResp

	TestService interface {
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	}

	defaultTestService struct {
		cli zrpc.Client
	}
)

func NewTestService(cli zrpc.Client) TestService {
	return &defaultTestService{
		cli: cli,
	}
}

func (m *defaultTestService) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := service_pb.NewTestServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
